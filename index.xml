<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>何律师</title><link>https://hebohang.github.io/</link><description>Recent content on 何律师</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>hebohang</copyright><lastBuildDate>Tue, 21 Nov 2023 16:03:52 +0800</lastBuildDate><atom:link href="https://hebohang.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Perforce</title><link>https://hebohang.github.io/p/perforce/</link><pubDate>Tue, 21 Nov 2023 16:03:52 +0800</pubDate><guid>https://hebohang.github.io/p/perforce/</guid><description>&lt;p>UE 官方主推 P4，在二进制文件上他有加锁的机制，还算能用，但是很贵。&lt;/p>
&lt;h2 id="安装">安装&lt;/h2>
&lt;p>下载地址：
&lt;a class="link" href="https://www.perforce.com/downloads/helix-visual-client-p4v" target="_blank" rel="noopener"
>https://www.perforce.com/downloads/helix-visual-client-p4v&lt;/a>&lt;/p>
&lt;p>P4最好默认安装在C盘，与后续的UGS使用设置有关。&lt;/p>
&lt;h2 id="p4v">P4V&lt;/h2>
&lt;p>我们的 Depot 和 Workspace 是一个一一对应关系，因此对哪个进行 Checkout 都是一样的。&lt;/p>
&lt;h3 id="1-reconcile-offline-work">1. Reconcile Offline Work&lt;/h3>
&lt;p>对于没有 Checkout 的文件，默认是锁住的，是一个只读状态。如果我们没有连接 P4 但是又更改为可写状态在其他地方进行了更改，此时就不会加入到 Pending 里面。
（我之前就犯了这个错误，vs连接p4失败了，于是漏了文件没传上去，导致项目构建失败）&lt;/p>
&lt;p>我们可以右键点击 Reconcile Offline Work 来检查一下有没有漏的文件：&lt;/p>
&lt;p>&lt;img src="https://hebohang.github.io/p/perforce/image-1.png"
width="479"
height="326"
srcset="https://hebohang.github.io/p/perforce/image-1_hud9ce1d9291b75e927a10afae2288713a_34656_480x0_resize_box_3.png 480w, https://hebohang.github.io/p/perforce/image-1_hud9ce1d9291b75e927a10afae2288713a_34656_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="146"
data-flex-basis="352px"
>&lt;/p>
&lt;p>这个指令也就是让 Change list 和本地的情况一致。&lt;/p>
&lt;h3 id="2-revert-unchanged-files">2. Revert Unchanged Files&lt;/h3>
&lt;p>第二个好用的指令是这个：&lt;/p>
&lt;p>&lt;img src="https://hebohang.github.io/p/perforce/image-2.png"
width="506"
height="159"
srcset="https://hebohang.github.io/p/perforce/image-2_huba647176080a3eb2b2e2f0a5054640c5_13450_480x0_resize_box_3.png 480w, https://hebohang.github.io/p/perforce/image-2_huba647176080a3eb2b2e2f0a5054640c5_13450_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="318"
data-flex-basis="763px"
>&lt;/p>
&lt;p>可以自动 Revert 掉没有更改但是被checkout的文件。&lt;/p>
&lt;h2 id="ide">IDE&lt;/h2>
&lt;h3 id="vs2022">VS2022&lt;/h3>
&lt;p>对于 VS2022，我们需要安装 P4VS 插件：
&lt;img src="https://hebohang.github.io/p/perforce/image-3.png"
width="437"
height="76"
srcset="https://hebohang.github.io/p/perforce/image-3_huc00e26f5ee987335853b4e982bcb3620_10028_480x0_resize_box_3.png 480w, https://hebohang.github.io/p/perforce/image-3_huc00e26f5ee987335853b4e982bcb3620_10028_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="P4VS"
class="gallery-image"
data-flex-grow="575"
data-flex-basis="1380px"
>&lt;/p>
&lt;p>此时就可以在Tools-&amp;gt;Options里进行设置：
&lt;img src="https://hebohang.github.io/p/perforce/image-4.png"
width="244"
height="272"
srcset="https://hebohang.github.io/p/perforce/image-4_hu496ae4c259e57bd20dc5bd20b90ef47c_15862_480x0_resize_box_3.png 480w, https://hebohang.github.io/p/perforce/image-4_hu496ae4c259e57bd20dc5bd20b90ef47c_15862_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="89"
data-flex-basis="215px"
>&lt;/p>
&lt;p>这里我认为很好用的一个设置是：&lt;/p>
&lt;p>&lt;img src="https://hebohang.github.io/p/perforce/image.png"
width="738"
height="486"
srcset="https://hebohang.github.io/p/perforce/image_hu28c11be75d821228a0c48b549839b5ea_39245_480x0_resize_box_3.png 480w, https://hebohang.github.io/p/perforce/image_hu28c11be75d821228a0c48b549839b5ea_39245_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="151"
data-flex-basis="364px"
>&lt;/p>
&lt;p>那样对于可写的文件，在保存的时候就会自动 Checkout 上，这样就不用担心漏checkout的问题了。&lt;/p>
&lt;h3 id="rider">Rider&lt;/h3>
&lt;p>由于觉得 VS2022 对于写 UE 有不方便之处，我还是切到了 Rider，对于 Rider 官方就支持 Perforce，无需安装任何插件。&lt;/p>
&lt;p>我们只需要填好这两处即可：&lt;/p>
&lt;p>&lt;img src="https://hebohang.github.io/p/perforce/image-5.png"
width="981"
height="722"
srcset="https://hebohang.github.io/p/perforce/image-5_hu08f73a6325ffffa6abe8961ac7d9c6ed_160016_480x0_resize_box_3.png 480w, https://hebohang.github.io/p/perforce/image-5_hu08f73a6325ffffa6abe8961ac7d9c6ed_160016_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="135"
data-flex-basis="326px"
>&lt;/p>
&lt;p>如果还没生效重启一下就可以了。&lt;/p></description></item><item><title>场景优化</title><link>https://hebohang.github.io/p/%E5%9C%BA%E6%99%AF%E4%BC%98%E5%8C%96/</link><pubDate>Mon, 20 Nov 2023 17:27:45 +0800</pubDate><guid>https://hebohang.github.io/p/%E5%9C%BA%E6%99%AF%E4%BC%98%E5%8C%96/</guid><description>&lt;h2 id="world-partition">World Partition&lt;/h2>
&lt;p>官方文档：&lt;/p>
&lt;p>&lt;a class="link" href="https://docs.unrealengine.com/5.0/zh-CN/world-partition-in-unreal-engine/" target="_blank" rel="noopener"
>https://docs.unrealengine.com/5.0/zh-CN/world-partition-in-unreal-engine/&lt;/a>&lt;/p>
&lt;p>主要是服务于大世界，提供了自动数据管理和基于距离进行加载的关卡流送系统。每个关卡分为是不是 World Partition（下称为WP）的版本，我们可以通过：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">UWorld&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">World&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">GEditor&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">GetEditorWorldContext&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">World&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">World&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">IsPartitionedWorld&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>来判断。&lt;/p>
&lt;h3 id="非wp关卡转换为wp关卡">非WP关卡转换为WP关卡&lt;/h3>
&lt;p>&lt;img src="https://hebohang.github.io/p/%E5%9C%BA%E6%99%AF%E4%BC%98%E5%8C%96/image-1.png"
width="430"
height="943"
srcset="https://hebohang.github.io/p/%E5%9C%BA%E6%99%AF%E4%BC%98%E5%8C%96/image-1_huf27707b80705762bfe81134fd438ebdf_332657_480x0_resize_box_3.png 480w, https://hebohang.github.io/p/%E5%9C%BA%E6%99%AF%E4%BC%98%E5%8C%96/image-1_huf27707b80705762bfe81134fd438ebdf_332657_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="45"
data-flex-basis="109px"
>&lt;/p>
&lt;h3 id="landscapespline">LandscapeSpline&lt;/h3>
&lt;p>LandscapeSpline与World Partition相关。&lt;/p>
&lt;p>核心函数：
LandscapeEdModeSplineTools.cpp：
BeginTool、AddControlPoint、AddSegment&lt;/p>
&lt;p>WorldPartition中，特殊的 ALandscapeSplineActor 的Owner是空的，他是通过 LandscapeGuid 和 LandscapeActor 附着到一个 ALandscape 上的。Outer是这个UWorld.&lt;/p>
&lt;p>非 WP 版本，是全部塞到一个 ALandscapeProxy 里面，一个 landscap e有一个 ALandscapeProxy，ALandscapeProxy 里面挂有 ULandscapeSplinesComponent，ULandscapeSplinesComponent， 里面有Segment数组和Control Point数组；&lt;/p>
&lt;p>WP版本则是每个landscape可以挂上多个 ALandscapeSplineActor，每个 ALandscapeSplineActor 里面挂有 ULandscapeSplinesComponent。&lt;/p>
&lt;h3 id="wp-hlod">WP-HLOD&lt;/h3>
&lt;p>还不太清楚 WP 版本的 HLOD 和正常的有什么区别，文档：
&lt;a class="link" href="https://docs.unrealengine.com/5.0/zh-CN/world-partition---hierarchical-level-of-detail-in-unreal-engine/" target="_blank" rel="noopener"
>https://docs.unrealengine.com/5.0/zh-CN/world-partition---hierarchical-level-of-detail-in-unreal-engine/&lt;/a>&lt;/p>
&lt;h2 id="ism-与-hism">ISM 与 HISM&lt;/h2>
&lt;p>&lt;img src="https://hebohang.github.io/p/%E5%9C%BA%E6%99%AF%E4%BC%98%E5%8C%96/image.png"
width="421"
height="395"
srcset="https://hebohang.github.io/p/%E5%9C%BA%E6%99%AF%E4%BC%98%E5%8C%96/image_hu7727bc95c29248425c71d05623ca6695_31189_480x0_resize_box_3.png 480w, https://hebohang.github.io/p/%E5%9C%BA%E6%99%AF%E4%BC%98%E5%8C%96/image_hu7727bc95c29248425c71d05623ca6695_31189_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="继承链"
class="gallery-image"
data-flex-grow="106"
data-flex-basis="255px"
>&lt;/p>
&lt;p>ISM（Instanced Static Meshes）学过图形学的应该都不陌生，走的dc的api接口都有所区别。但是 ISM 需要所有的 Instance 都具有相同的 LOD，也就是说如果远处和近处都是用 ISM 一起渲染的，他们仍然要是一级LOD；
因此对于植被而言，通常覆盖范围较广，但是我们不可能远处和近处都用LOD0，因此又推出了 HISM（Hierarchical instanced static mesh），他把所有的 Instance 分簇，每一簇使用一级 LOD 层。&lt;/p>
&lt;p>具体原理可以参考：&lt;/p>
&lt;p>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/58963258" target="_blank" rel="noopener"
>https://zhuanlan.zhihu.com/p/58963258&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/441958089" target="_blank" rel="noopener"
>https://zhuanlan.zhihu.com/p/441958089&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/443809005" target="_blank" rel="noopener"
>https://zhuanlan.zhihu.com/p/443809005&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/42949773" target="_blank" rel="noopener"
>https://zhuanlan.zhihu.com/p/42949773&lt;/a>&lt;/p>
&lt;p>参考：
&lt;a class="link" href="https://www.intel.com/content/www/us/en/developer/articles/training/unreal-engine-4-optimization-tutorial-part-2.html" target="_blank" rel="noopener"
>https://www.intel.com/content/www/us/en/developer/articles/training/unreal-engine-4-optimization-tutorial-part-2.html&lt;/a>&lt;/p>
&lt;h2 id="hlod">HLOD&lt;/h2>
&lt;p>官方文档：
&lt;a class="link" href="https://docs.unrealengine.com/5.0/zh-CN/hierarchical-level-of-detail-in-unreal-engine/" target="_blank" rel="noopener"
>https://docs.unrealengine.com/5.0/zh-CN/hierarchical-level-of-detail-in-unreal-engine/&lt;/a>&lt;/p>
&lt;p>针对静态Mesh资产的功能，当模型处于远距离时，分层细节级别（HLOD）系统可以将多个静态网格体Actor合并成单个代理网格体和材质。
生成代理网格体是需要花时间的步骤，并且每次编辑完场景时，左上角可能有需要重新构建HLOD代理网格体的提示（有点像灯光一样，也是有重新构建灯光的步骤）。&lt;/p>
&lt;h2 id="actor合并">Actor合并&lt;/h2>
&lt;p>&lt;img src="https://hebohang.github.io/p/%E5%9C%BA%E6%99%AF%E4%BC%98%E5%8C%96/image-2.png"
width="573"
height="761"
srcset="https://hebohang.github.io/p/%E5%9C%BA%E6%99%AF%E4%BC%98%E5%8C%96/image-2_hue85f02823e92abfdb04d366bc3d050e8_351665_480x0_resize_box_3.png 480w, https://hebohang.github.io/p/%E5%9C%BA%E6%99%AF%E4%BC%98%E5%8C%96/image-2_hue85f02823e92abfdb04d366bc3d050e8_351665_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="75"
data-flex-basis="180px"
>
一共有四种功能：Merge、Simplify、Batch、Approximate，每一种功能都可以在下面的 Merge Actors Settings 里面进行设置配置。&lt;/p>
&lt;p>官方文档：
&lt;a class="link" href="https://docs.unrealengine.com/5.0/zh-CN/merging-actors-in-unreal-engine/" target="_blank" rel="noopener"
>https://docs.unrealengine.com/5.0/zh-CN/merging-actors-in-unreal-engine/&lt;/a>&lt;/p></description></item><item><title>编辑器扩展</title><link>https://hebohang.github.io/p/%E7%BC%96%E8%BE%91%E5%99%A8%E6%89%A9%E5%B1%95/</link><pubDate>Mon, 20 Nov 2023 15:28:35 +0800</pubDate><guid>https://hebohang.github.io/p/%E7%BC%96%E8%BE%91%E5%99%A8%E6%89%A9%E5%B1%95/</guid><description>&lt;h2 id="contentbrowser-扩展">ContentBrowser 扩展&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">UToolMenu&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">Menu&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UToolMenus&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">Get&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">ExtendMenu&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ContentBrowser.AssetContextMenu.AssetActionsSubMenu&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">FToolMenuSection&lt;/span>&lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">Section&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Menu&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">FindOrAddSection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;AssetContextAdvancedActions&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Section&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">AddMenuEntry&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;HbhTest&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">LOCTEXT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hbh Test Title&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Hbh Test1&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">LOCTEXT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hbh Test TooltipText&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Hbh Test2&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">FSlateIcon&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">FToolMenuExecuteAction&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">CreateLambda&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">](&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="n">FToolMenuContext&lt;/span>&lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">InContext&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">UContentBrowserAssetContextMenuContext&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">Context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">InContext&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">FindContext&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">UContentBrowserAssetContextMenuContext&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">UObject&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="nl">Asset&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">Context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">GetSelectedObjects&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">UE_LOG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">LogTemp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Log&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">TEXT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%s&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">Asset&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">GetPathName&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>对资产右键，效果：
&lt;img src="https://hebohang.github.io/p/%E7%BC%96%E8%BE%91%E5%99%A8%E6%89%A9%E5%B1%95/image.png"
width="585"
height="641"
srcset="https://hebohang.github.io/p/%E7%BC%96%E8%BE%91%E5%99%A8%E6%89%A9%E5%B1%95/image_hu7e5e1bda002e2e5a56217d54387a2add_113336_480x0_resize_box_3.png 480w, https://hebohang.github.io/p/%E7%BC%96%E8%BE%91%E5%99%A8%E6%89%A9%E5%B1%95/image_hu7e5e1bda002e2e5a56217d54387a2add_113336_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="91"
data-flex-basis="219px"
>&lt;/p>
&lt;h2 id="弹窗">弹窗&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">FName&lt;/span> &lt;span class="nf">TabName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Your Tab Name&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">FGlobalTabmanager&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">Get&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">RegisterNomadTabSpawner&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">TabName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">FOnSpawnTab&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">CreateRaw&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">OnSpawnTab&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">SetDisplayName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">LOCTEXT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;xxx&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;xxx&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">SetMenuType&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ETabSpawnerMenuType&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">Hidden&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">FGlobalTabmanager&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">Get&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">UnregisterNomadTabSpawner&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">TabName&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">FGlobalTabmanager&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">Get&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">TryInvokeTab&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">TabName&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">TSharedRef&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SDockTab&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">OnSpawnTab&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="n">FSpawnTabArgs&lt;/span>&lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">SpawnTabArgs&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nf">SNew&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SDockTab&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">TabRole&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ETabRole&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">NomadTab&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SNew&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">xxx&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>UE基础知识</title><link>https://hebohang.github.io/p/ue%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link><pubDate>Fri, 17 Nov 2023 15:56:23 +0800</pubDate><guid>https://hebohang.github.io/p/ue%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid><description>&lt;h2 id="编译链接">编译链接&lt;/h2>
&lt;h3 id="源码编译">源码编译&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git clone -b 4.27.2-release --depth&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> git@github.com:EpicGames/UnrealEngine.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/107516361" target="_blank" rel="noopener"
>https://zhuanlan.zhihu.com/p/107516361&lt;/a>&lt;/p>
&lt;h3 id="ue模块类相关">UE模块、类相关&lt;/h3>
&lt;ul>
&lt;li>[YourModuleName]_API宏的作用?&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>
&lt;p>放函数声明前用于暴露(导出)该函数&lt;/p>
&lt;/li>
&lt;li>
&lt;p>放类声明前用于暴露(导出)该类的所有内容&lt;/p>
&lt;p>特别注意：_API前面的内容&lt;strong>一定要大写&lt;/strong>！否则会编译不通过&lt;/p>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;p>MinimalAPI说明符的作用?&lt;/p>
&lt;p>暴露(导出)该类的类型信息让其它模块可以&lt;/p>
&lt;ol>
&lt;li>Cast到该类型&lt;/li>
&lt;li>继承该类型 (该类型的所有定义在.cpp文件的虚函数都需要导出)&lt;/li>
&lt;li>使用内联函数&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h2 id="ui">UI&lt;/h2>
&lt;p>&lt;img src="https://hebohang.github.io/p/ue%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image.png"
width="429"
height="284"
srcset="https://hebohang.github.io/p/ue%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image_hu5361f5bc6b8923dc20e1a0f4afbf7867_20897_480x0_resize_box_3.png 480w, https://hebohang.github.io/p/ue%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image_hu5361f5bc6b8923dc20e1a0f4afbf7867_20897_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="文本自动换行"
class="gallery-image"
data-flex-grow="151"
data-flex-basis="362px"
>&lt;/p>
&lt;p>勾掉 auto wrap text，就可以控制自动换行的文本大小（有wrap控制的情况下？）。&lt;/p>
&lt;h2 id="资产">资产&lt;/h2>
&lt;h3 id="texture">Texture&lt;/h3>
&lt;h4 id="texture-stream-与-lod-bias">Texture Stream 与 LOD Bias&lt;/h4>
&lt;p>&lt;a class="link" href="https://polycount.com/discussion/200525/ue4-texture-settings-help-mip-gen-settings-lod-bias-power-of-two-mode" target="_blank" rel="noopener"
>https://polycount.com/discussion/200525/ue4-texture-settings-help-mip-gen-settings-lod-bias-power-of-two-mode&lt;/a>&lt;/p>
&lt;p>ue 的贴图可以勾选 Never Stream，此时会取消纹理流送；否则默认开启纹理流送。&lt;/p>
&lt;p>关闭纹理流送，就可以保证每次都加载贴图原生大小，保证最高分辨率，但是可能有性能影响，一般ui可以开。&lt;/p>
&lt;p>纹理流送首先加载最小的mipmap，然后逐渐增加；如果 LOD Bias 为0，则最后加载到原贴图最大版本为止；为1则为第一级。例如 2048 的贴图，LOD Bias 为1，则纹理流送到 1024 为止。&lt;/p>
&lt;h4 id="texture-group">Texture Group&lt;/h4>
&lt;p>纹理组，可以一起设置贴图的各种设置：默认压缩、mip生成、lod bias等等。&lt;/p>
&lt;h2 id="c">C++&lt;/h2>
&lt;h3 id="ue反射相关">ue反射相关&lt;/h3>
&lt;p>入门：
&lt;a class="link" href="https://zhuanlan.zhihu.com/p/400473355" target="_blank" rel="noopener"
>https://zhuanlan.zhihu.com/p/400473355&lt;/a>
&lt;a class="link" href="https://www.cnblogs.com/ghl_carmack/p/5701862.html" target="_blank" rel="noopener"
>https://www.cnblogs.com/ghl_carmack/p/5701862.html&lt;/a>
&lt;a class="link" href="https://ikrima.dev/ue4guide/engine-programming/uobject-reflection/uobject-reflection/" target="_blank" rel="noopener"
>https://ikrima.dev/ue4guide/engine-programming/uobject-reflection/uobject-reflection/&lt;/a>&lt;/p>
&lt;h4 id="class-default-object-简称cdo">Class Default Object, 简称CDO&lt;/h4>
&lt;p>UCLASS宏为UObject提供了一个描述其基于虚幻的类型的UCLASS的引用。每个UCLASS都维护一个名为“类默认对象”的对象，简称CDO。&lt;/p>
&lt;p>CDO本质上是一个默认的“模板”对象，由类构造函数生成，之后未修改。可以为给定的Object实例检索UCLASS和CDO，尽管它们通常应该被认为是只读的。可以使用GetClass()函数随时访问Object实例的UCLASS。&lt;/p>
&lt;p>CDO是在引擎初始化时创建的，当引擎为每个类生成UClass对象时。每个UClass的实例都是在引擎初始化期间创建的，并被分配为该UClass的CDO。并且包含在反射系统中，如在编辑器可以操作类蓝图。Obj.cpp可以看到引擎CDO初始化创建。&lt;/p>
&lt;p>因此一个 UClass* 是无法直接Cast转型成其他类型的，因为没有实例化；我们可以用 TSubclassOf 先转为其他类型，之后获取 CDO 得到默认对象（&lt;code>GetDefaultObject&amp;lt;xxx&amp;gt;&lt;/code>）再调用它的相关函数之类的。&lt;/p>
&lt;h4 id="获取uobject属性值">获取UObject属性值&lt;/h4>
&lt;p>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/61042237" target="_blank" rel="noopener"
>https://zhuanlan.zhihu.com/p/61042237&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 获取属性名为PropertyName的属性的值
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">UObject&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">Object&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">...;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">FName&lt;/span> &lt;span class="n">PropertyName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">...;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">FProperty&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">Property&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Object&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">GetClass&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">FindPropertyByName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PropertyName&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Property&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">ValuePtr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Property&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">ContainerPtrToValuePtr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ValuePtr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">FString&lt;/span> &lt;span class="n">Value&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Property&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">ExportTextItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ValuePtr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">nullptr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">nullptr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PPF_None&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">UE_LOG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">LogTemp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Log&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">TEXT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Property %s value is %s&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">PropertyName&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ToString&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">Value&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="标记宏">标记宏&lt;/h4>
&lt;p>可以使用UENUM()、UCLASS()、USTRUCT()、UFUNCTION()、UPROPERTY()来标记不同的类型和成员变量，标记也可以包含额外的描述关键字。&lt;/p>
&lt;p>每个描述的关键字（例如EditAnywhere或BlueprintCallable）都在ObjectMacros.h中有一个镜像，有一个简短的描述。当不知道一个关键字的意思时，可以去ObjectMacros.h中去查看&lt;/p>
&lt;p>更方便地是直接看文档：
&lt;a class="link" href="https://docs.unrealengine.com/5.3/zh-CN/ufunctions-in-unreal-engine/" target="_blank" rel="noopener"
>https://docs.unrealengine.com/5.3/zh-CN/ufunctions-in-unreal-engine/&lt;/a>&lt;/p>
&lt;h5 id="类说明符-uclass">类说明符 UCLASS&lt;/h5>
&lt;p>&lt;a class="link" href="https://docs.unrealengine.com/5.3/zh-CN/class-specifiers/" target="_blank" rel="noopener"
>https://docs.unrealengine.com/5.3/zh-CN/class-specifiers/&lt;/a>&lt;/p>
&lt;h5 id="蓝图-uparamref">蓝图 UPARAM(ref)&lt;/h5>
&lt;p>&lt;a class="link" href="https://docs.unrealengine.com/5.3/zh-CN/exposing-gameplay-elements-to-blueprints-visual-scripting-in-unreal-engine/" target="_blank" rel="noopener"
>https://docs.unrealengine.com/5.3/zh-CN/exposing-gameplay-elements-to-blueprints-visual-scripting-in-unreal-engine/&lt;/a>&lt;/p>
&lt;h3 id="指针和引用">指针和引用&lt;/h3>
&lt;p>参考：
&lt;a class="link" href="https://zhuanlan.zhihu.com/p/604213414" target="_blank" rel="noopener"
>https://zhuanlan.zhihu.com/p/604213414&lt;/a>&lt;/p>
&lt;h4 id="类指针">类指针&lt;/h4>
&lt;p>UClass* 和 TSubClassOf&lt;T>&lt;/p>
&lt;h4 id="软引用和硬引用">软引用和硬引用&lt;/h4>
&lt;p>硬引用在资产加载时的逻辑：当A资产持有B资产的硬引用时，A资产被加载到内存中时，B资产也会被加载到内存中。&lt;/p>
&lt;p>软引用在资产加载时的逻辑：当A资产持有B资产的软引用是，A资产被加载到内存中时，B资产不会被加载。&lt;/p>
&lt;p>软引用本质上存的是资产的路径。&lt;/p>
&lt;p>软对象引用：&lt;code>TSoftObjectPtr&amp;lt;T&amp;gt; SoftObjRef;&lt;/code>&lt;/p>
&lt;p>软类引用：&lt;code>TSoftClassPtr&amp;lt;T&amp;gt; SoftClassRef;&lt;/code>&lt;/p>
&lt;h3 id="字符串处理">字符串处理&lt;/h3>
&lt;h4 id="fstringfnameftext互转">FString、FName、FText互转&lt;/h4>
&lt;p>&lt;a class="link" href="https://docs.unrealengine.com/5.3/zh-CN/string-handling-in-unreal-engine/" target="_blank" rel="noopener"
>https://docs.unrealengine.com/5.3/zh-CN/string-handling-in-unreal-engine/&lt;/a>&lt;/p>
&lt;h4 id="中文乱码">中文乱码&lt;/h4>
&lt;p>使用 UTF8_TO_TCHAR：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">TextBlock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">SetText&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">FText&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">FromString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UTF8_TO_TCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;否&amp;#34;&lt;/span>&lt;span class="p">)));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="本地化">本地化&lt;/h4>
&lt;p>参考：&lt;/p>
&lt;p>&lt;a class="link" href="https://blog.csdn.net/u011718663/article/details/117785611" target="_blank" rel="noopener"
>https://blog.csdn.net/u011718663/article/details/117785611&lt;/a>&lt;/p>
&lt;p>本地化主要是根据&lt;code>LOCTEXT&lt;/code>或者&lt;code>NSLOCTEXT&lt;/code>将这两个里面的&lt;code>LOCTEXT(“key”, “value”)&lt;/code>, 找到这个key，然后根据不同语言，将我们的Value替换掉&lt;/p>
&lt;p>&lt;strong>LOCTEXT用法&lt;/strong>&lt;/p>
&lt;p>前后必须要加LOCTEXT_NAMESPACE 和LOCTEXT_NAMESPACE定义一个作用域，
代表下面的字符串都在这里作用域里头，引擎好通过这个域去搜索所有的LOCTEXT&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define LOCTEXT_NAMESPACE &amp;#34;SlateMain&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">LOCTEXT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;SMainSlate_ButtonSlateAnimation_Text3333&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;测试Slate动画&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#undef LOCTEXT_NAMESPACE
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>NSLOCTEXT用法&lt;/strong>&lt;/p>
&lt;p>不用加LOCTEXT_NAMESPACE 和LOCTEXT_NAMESPACE。但是三个参数，第一个也是作用域&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="n">Text&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">LOCTEXT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;SlateMain&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;SMainSlate_ButtonSlateAnimation_Text3333&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;测试Slate动画&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>UE5在编辑器的 Tools-&amp;gt;Localization Dashboard 中配置：
&lt;img src="https://hebohang.github.io/p/ue%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-1.png"
width="662"
height="371"
srcset="https://hebohang.github.io/p/ue%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-1_hu0c2ec68366fc04d63bc8a90aee69491a_139384_480x0_resize_box_3.png 480w, https://hebohang.github.io/p/ue%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-1_hu0c2ec68366fc04d63bc8a90aee69491a_139384_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="178"
data-flex-basis="428px"
>&lt;/p>
&lt;h3 id="复制-duplicate">复制 Duplicate&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 1. Duplicate Object
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">YourType&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">NewObject&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DuplicateObject&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">YourType&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="n">TObjectPtr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&amp;amp;&lt;/span> &lt;span class="n">SourceObject&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">UObject&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">Outer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">FName&lt;/span> &lt;span class="n">Name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NAME_None&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 2. Duplicate Actor
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">UEditorActorSubsystem&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">EditorActorSubsystem&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">GEditor&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">GetEditorSubsystem&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">UEditorActorSubsystem&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">YourType&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">NewActor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">YourType&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">EditorActorSubsystem&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">DuplicateActor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">YourActor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">World&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 3. Duplicate Asset
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">FAssetToolsModule&lt;/span>&lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">AssetToolsModule&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">FModuleManager&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">LoadModuleChecked&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">FAssetToolsModule&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;AssetTools&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">UObject&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">NewAsset&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">AssetToolsModule&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Get&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">DuplicateAsset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;NewAssetName&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;NewAssetPath&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">YourAsset&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="slate专栏">Slate专栏&lt;/h3>
&lt;h4 id="快速入门指南">快速入门指南&lt;/h4>
&lt;p>官方教程：
&lt;a class="link" href="https://docs.unrealengine.com/5.0/zh-CN/slate-editor-window-quickstart-guide-for-unreal-engine/" target="_blank" rel="noopener"
>https://docs.unrealengine.com/5.0/zh-CN/slate-editor-window-quickstart-guide-for-unreal-engine/&lt;/a>&lt;/p>
&lt;p>但是官方教程有一点错误，详细代码可以看：
&lt;a class="link" href="https://github.com/yegorsw/UE_SimpleSlatePlugin/tree/main" target="_blank" rel="noopener"
>https://github.com/yegorsw/UE_SimpleSlatePlugin/tree/main&lt;/a>&lt;/p>
&lt;h4 id="细节面板自定义">细节面板自定义&lt;/h4>
&lt;p>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/463008792" target="_blank" rel="noopener"
>https://zhuanlan.zhihu.com/p/463008792&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://imzlp.com/posts/26919/" target="_blank" rel="noopener"
>https://imzlp.com/posts/26919/&lt;/a>&lt;/p>
&lt;p>其中若是对TArray类型自定义，我是参考的ue源代码，参考链接：
&lt;a class="link" href="https://forums.unrealengine.com/t/how-to-use-ipropertytypecustomization-to-display-tarray/414634/7" target="_blank" rel="noopener"
>https://forums.unrealengine.com/t/how-to-use-ipropertytypecustomization-to-display-tarray/414634/7&lt;/a>&lt;/p>
&lt;p>最后翻看ue代码：FSpriteDetailsCustomization::BuildTextureSection&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">TSharedRef&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">FDetailArrayBuilder&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">PropertyValuesBuilder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">MakeShareable&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">FDetailArrayBuilder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PropertyValuesHandle&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ToSharedRef&lt;/span>&lt;span class="p">()));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PropertyValuesBuilder&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">OnGenerateArrayElementWidget&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">FOnGenerateArrayElementWidget&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">CreateSP&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">FKCustomPropertyDetails&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">GeneratePropertyValueWidget&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">StructBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">AddCustomBuilder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PropertyValuesBuilder&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="关闭代码文件优化">关闭代码文件优化&lt;/h3>
&lt;p>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/563164847" target="_blank" rel="noopener"
>https://zhuanlan.zhihu.com/p/563164847&lt;/a>
可以按vs的方式：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#pragma optimize(&amp;#34;&amp;#34;, off)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#pragma optimize(&amp;#34;&amp;#34;, on)
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Hugo</title><link>https://hebohang.github.io/p/hugo/</link><pubDate>Wed, 15 Nov 2023 16:20:34 +0800</pubDate><guid>https://hebohang.github.io/p/hugo/</guid><description>&lt;h2 id="常用命令">常用命令&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 本地预览&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hugo server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 预览特定config&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hugo --config&lt;span class="o">=&lt;/span>config-HEngine.yaml server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 新建文章（指定文章路径）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hugo new post/xxx/xxx/index.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 提交&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git add .&lt;span class="p">;&lt;/span>git commit -m &lt;span class="s2">&amp;#34;update&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>git push
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="hugo链接">Hugo链接&lt;/h2>
&lt;p>官方文档：
&lt;a class="link" href="https://gohugo.io/documentation/" target="_blank" rel="noopener"
>https://gohugo.io/documentation/&lt;/a>&lt;/p>
&lt;p>官方git：
&lt;a class="link" href="https://github.com/gohugoio/hugo" target="_blank" rel="noopener"
>https://github.com/gohugoio/hugo&lt;/a>&lt;/p>
&lt;h2 id="hugostack-环境配置">Hugo+Stack 环境配置&lt;/h2>
&lt;p>我们选用的是stack主题：
&lt;a class="link" href="https://github.com/CaiJimmy/hugo-theme-stack" target="_blank" rel="noopener"
>https://github.com/CaiJimmy/hugo-theme-stack&lt;/a>&lt;/p>
&lt;h3 id="快速入门版本">快速入门版本&lt;/h3>
&lt;p>最开始，我们使用的是stack官方给的快速上手版本：https://github.com/CaiJimmy/hugo-theme-stack-starter ，这个版本直接使用 Hugo module 给串联起来，并且可以直接使用 GitHub 的 codespace 直接上手写博客。&lt;/p>
&lt;p>但是用这种版本会有一些问题：&lt;/p>
&lt;ul>
&lt;li>codespace启动较慢，不如本地写&lt;/li>
&lt;li>因为没有用源码，所以要么是自己fork一份stack theme再改自己仓库对应的主题地址，要么就不能对主题进行定制化修改&lt;/li>
&lt;/ul>
&lt;p>基于此，最后我还是选择了源码+本地环境配置的写法。当然 codespace 仍然是可以用的。&lt;/p>
&lt;h3 id="本地环境配置">本地环境配置&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>安装hugo&lt;/p>
&lt;p>根据&lt;a class="link" href="https://gohugo.io/installation/windows/" target="_blank" rel="noopener"
>官方建议&lt;/a>，我们选择下载扩展版本：
根据我的本机环境，我下载的是&lt;a class="link" href="https://github.com/gohugoio/hugo/releases/tag/v0.120.4" target="_blank" rel="noopener"
>hugo_extended_0.120.4_windows-amd64.zip&lt;/a>版本。&lt;/p>
&lt;p>安装完成后可以用 &lt;code>hugo version&lt;/code> 查看版本，检查是否安装成功。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>安装go语言&lt;/p>
&lt;p>hugo选择是go作为构建语言，这种编译型的语言有着天然的速度优势，因此几乎可以做到实时预览，这也是我选择hugo的主要原因。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>初始化博客环境&lt;/p>
&lt;p>&lt;code>hugo new site blog&lt;/code>&lt;/p>
&lt;p>这样就会新建立blog文件夹，并且包含hugo的基本环境。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>下载主题源码&lt;/p>
&lt;p>我这里选用的stack主题，直接在&lt;a class="link" href="https://github.com/CaiJimmy/hugo-theme-stack" target="_blank" rel="noopener"
>stack的仓库&lt;/a>拉一份release版本的，放在我们刚刚的博客环境中的themes文件夹中（若没有则新建）。&lt;/p>
&lt;p>一般主题都会有一个 exampleSite 文件夹，拷贝到博客根目录就ok了。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="ci流程">CI流程&lt;/h3>
&lt;p>博客仓库托管于 Github，我们自然是使用 Github Action 进行自动部署的 CI（continuous integration）流程。事实上，前面的&lt;a class="link" href="https://github.com/CaiJimmy/hugo-theme-stack-starter/tree/master/.github/workflows" target="_blank" rel="noopener"
>stack快速版本&lt;/a>就已经给了这样的文件了。&lt;/p>
&lt;p>但是不幸的是他还有点问题，他的部署流程使用的是 &lt;code>JamesIves/github-pages-deploy-action@v4&lt;/code>，但是我没有成功。我最后改成了使用 &lt;code>peaceiris/actions-gh-pages@v3&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy 🚀&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-gh-pages@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">PERSONAL_TOKEN&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">这里填写你的 GitHub 的 token&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">EXTERNAL_REPOSITORY&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">这里填你部署的地址，我的是 hebohang/hebohang.github.io&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">PUBLISH_BRANCH&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">PUBLISH_DIR&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./public&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">commit_message&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ github.event.head_commit.message }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="关于token">关于TOKEN&lt;/h4>
&lt;p>&lt;img src="https://hebohang.github.io/p/hugo/image1.png"
width="356"
height="201"
srcset="https://hebohang.github.io/p/hugo/image1_hu193003f0b7640e96a5039ff455bd6638_13269_480x0_resize_box_3.png 480w, https://hebohang.github.io/p/hugo/image1_hu193003f0b7640e96a5039ff455bd6638_13269_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="425px"
>&lt;/p>
&lt;p>&lt;img src="https://hebohang.github.io/p/hugo/image2.png"
width="785"
height="182"
srcset="https://hebohang.github.io/p/hugo/image2_hu381711e26b267189c5a687bc52c470cf_21346_480x0_resize_box_3.png 480w, https://hebohang.github.io/p/hugo/image2_hu381711e26b267189c5a687bc52c470cf_21346_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="431"
data-flex-basis="1035px"
>&lt;/p>
&lt;p>这里需要注意，我们应该给token对应的权限以让他可以使用 GitHub Workflow（而之前hexo的部署是使用hexo指令的，就没有加权限的步骤）。&lt;/p>
&lt;h2 id="使用多个主题">使用多个主题&lt;/h2>
&lt;p>本地可以这样测试：&lt;code>hugo --config=config-HEngine.yaml server&lt;/code>&lt;/p>
&lt;p>使用多个config以指定不同的theme。&lt;/p>
&lt;p>&lt;a class="link" href="https://discourse.gohugo.io/t/two-themes-as-separate-hugo-directories-deployed-to-the-same-website/27899/4" target="_blank" rel="noopener"
>https://discourse.gohugo.io/t/two-themes-as-separate-hugo-directories-deployed-to-the-same-website/27899/4&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/peaceiris/actions-gh-pages/issues/324" target="_blank" rel="noopener"
>https://github.com/peaceiris/actions-gh-pages/issues/324&lt;/a>&lt;/p>
&lt;h2 id="关于stack主题">关于stack主题&lt;/h2>
&lt;p>文档：https://stack.jimmycai.com/config/menu&lt;/p>
&lt;h3 id="说明">说明&lt;/h3>
&lt;ul>
&lt;li>博客中链接需要单独起一行才生效。&lt;/li>
&lt;li>如果创建多级文件夹时文章文件名不是 &lt;code>index.md&lt;/code> 或者类别、标签文件名不是 &lt;code>_index.md&lt;/code> 的话，设置封面图片会出现问题。&lt;/li>
&lt;/ul>
&lt;h3 id="扩展">扩展&lt;/h3>
&lt;h4 id="代码块">代码块&lt;/h4>
&lt;h5 id="tab为4个字符宽不生效">tab为4个字符宽不生效&lt;/h5>
&lt;p>参考：&lt;/p>
&lt;p>&lt;a class="link" href="https://discourse.gohugo.io/t/chroma-syntax-highlighter-and-tabwidth/31455/5" target="_blank" rel="noopener"
>https://discourse.gohugo.io/t/chroma-syntax-highlighter-and-tabwidth/31455/5&lt;/a>&lt;/p>
&lt;p>需要在 themes\hugo-theme-stack\assets\scss\partials\highlight\common.scss 后面添加：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">pre&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">chroma&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kp">-moz-&lt;/span>&lt;span class="k">tab-size&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="kp">-o-&lt;/span>&lt;span class="k">tab-size&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">tab-size&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="参考">参考&lt;/h3>
&lt;p>&lt;a class="link" href="https://blog.reincarnatey.net/2023/build-hugo-blog-with-stack-mod/#%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2" target="_blank" rel="noopener"
>https://blog.reincarnatey.net/2023/build-hugo-blog-with-stack-mod/#%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2&lt;/a>&lt;/p></description></item><item><title>Hexo</title><link>https://hebohang.github.io/p/hexo/</link><pubDate>Sat, 11 Nov 2023 16:17:13 +0800</pubDate><guid>https://hebohang.github.io/p/hexo/</guid><description>&lt;h1 id="建站选型">建站选型&lt;/h1>
&lt;p>博客分静态博客和动态博客，静态博客维护成本小，因此我这里选择的是静态博客的方式。主流的几个静态博客框架是jekyll、hexo和hugo，我们这里使用的是 &lt;a class="link" href="https://hexo.io/" target="_blank" rel="noopener"
>Hexo&lt;/a> 进行静态博客的生成，随后部署在Github Pages上。&lt;/p>
&lt;p>主要参考的链接是：https://blog.csdn.net/yaorongke/article/details/119089190&lt;/p>
&lt;h1 id="关于hexo">关于Hexo&lt;/h1>
&lt;p>文档：&lt;a class="link" href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener"
>documentation&lt;/a>&lt;/p>
&lt;p>疑问：&lt;a class="link" href="https://hexo.io/zh-cn/docs/troubleshooting.html" target="_blank" rel="noopener"
>troubleshooting&lt;/a>&lt;/p>
&lt;p>Github：&lt;a class="link" href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener"
>GitHub&lt;/a>&lt;/p>
&lt;h2 id="常用指令">常用指令&lt;/h2>
&lt;p>Windows Powershell 多个指令不能用 &amp;amp;&amp;amp; 了，我们可以使用分号 ;&lt;/p>
&lt;p>我的常用指令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hexo clean
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hexo g
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hexo s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hexo d
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hexo g -d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>因此本地测试我们可以直接：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hexo clean&lt;span class="p">;&lt;/span> hexo g&lt;span class="p">;&lt;/span> hexo s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>一步到位。&lt;/p>
&lt;p>部署的时候可以：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hexo clean&lt;span class="p">;&lt;/span> hexo g&lt;span class="p">;&lt;/span> hexo d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>或者&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hexo g -d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="quick-start">Quick Start&lt;/h2>
&lt;h3 id="新建博客">新建博客&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ hexo new &lt;span class="s2">&amp;#34;My New Post&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>More info: &lt;a class="link" href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener"
>Writing&lt;/a>&lt;/p>
&lt;h3 id="本地起一个服务器">本地起一个服务器&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ hexo server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>More info: &lt;a class="link" href="https://hexo.io/docs/server.html" target="_blank" rel="noopener"
>Server&lt;/a>&lt;/p>
&lt;p>主要是用于本地自测，可以简单用写： &lt;code>hexo s&lt;/code>&lt;/p>
&lt;h3 id="generate-static-files">Generate static files&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ hexo generate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>More info: &lt;a class="link" href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener"
>Generating&lt;/a>&lt;/p>
&lt;p>本地生成，&lt;code>hexo g&lt;/code> 一键部署.&lt;/p>
&lt;h3 id="deploy-to-remote-sites">Deploy to remote sites&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ hexo deploy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>More info: &lt;a class="link" href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener"
>Deployment&lt;/a>&lt;/p>
&lt;p>我们配好部署网站后端后，就可以直接用 &lt;code>hexo g -d&lt;/code>&lt;/p>
&lt;h1 id="关于next">关于Next&lt;/h1>
&lt;p>我们选择的主题theme是Next主题，参考使用文档：
&lt;a class="link" href="https://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener"
>https://theme-next.iissnan.com/getting-started.html&lt;/a>&lt;/p>
&lt;p>Github位置：https://github.com/theme-next/hexo-theme-next&lt;/p></description></item><item><title>归档</title><link>https://hebohang.github.io/archives/</link><pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate><guid>https://hebohang.github.io/archives/</guid><description/></item><item><title>HEngine</title><link>https://hebohang.github.io/hengine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hebohang.github.io/hengine/</guid><description>&lt;p>HEngine说明文档：&lt;/p>
&lt;p>&lt;a class="link" href="https://hebohang.gitbook.io/hengine/" target="_blank" rel="noopener"
>https://hebohang.gitbook.io/hengine/&lt;/a>&lt;/p>
&lt;p>HEngineBook:&lt;/p>
&lt;p>&lt;a class="link" href="https://hebohang.github.io/HEngine/" target="_blank" rel="noopener"
>https://hebohang.github.io/HEngine/&lt;/a>&lt;/p></description></item><item><title>关于</title><link>https://hebohang.github.io/%E5%85%B3%E4%BA%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hebohang.github.io/%E5%85%B3%E4%BA%8E/</guid><description>&lt;p>This is a test page for i18n support.&lt;/p></description></item><item><title>链接</title><link>https://hebohang.github.io/%E9%93%BE%E6%8E%A5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hebohang.github.io/%E9%93%BE%E6%8E%A5/</guid><description>&lt;p>To use this feature, add &lt;code>links&lt;/code> section to frontmatter.&lt;/p>
&lt;p>This page&amp;rsquo;s frontmatter:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">links&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">title&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">GitHub&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">GitHub is the world&amp;#39;s largest software development platform.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">website&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://github.com&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">title&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">TypeScript&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">TypeScript is a typed superset of JavaScript that compiles to plain JavaScript.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">website&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://www.typescriptlang.org&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ts-logo-128.jpg&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>image&lt;/code> field accepts both local and external images.&lt;/p></description></item><item><title>搜索</title><link>https://hebohang.github.io/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hebohang.github.io/search/</guid><description/></item></channel></rss>