<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>版本控制 on 何律师</title><link>https://hebohang.github.io/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/</link><description>Recent content in 版本控制 on 何律师</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>hebohang</copyright><lastBuildDate>Tue, 21 Nov 2023 16:03:52 +0800</lastBuildDate><atom:link href="https://hebohang.github.io/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/index.xml" rel="self" type="application/rss+xml"/><item><title>Perforce</title><link>https://hebohang.github.io/p/perforce/</link><pubDate>Tue, 21 Nov 2023 16:03:52 +0800</pubDate><guid>https://hebohang.github.io/p/perforce/</guid><description>&lt;p>UE 官方主推 P4，在二进制文件上他有加锁的机制，还算能用，但是很贵。&lt;/p>
&lt;h2 id="安装">安装&lt;/h2>
&lt;p>下载地址：
&lt;a class="link" href="https://www.perforce.com/downloads/helix-visual-client-p4v" target="_blank" rel="noopener"
>https://www.perforce.com/downloads/helix-visual-client-p4v&lt;/a>&lt;/p>
&lt;p>P4最好默认安装在C盘，与后续的UGS使用设置有关。&lt;/p>
&lt;h2 id="p4v">P4V&lt;/h2>
&lt;p>我们的 Depot 和 Workspace 是一个一一对应关系，因此对哪个进行 Checkout 都是一样的。&lt;/p>
&lt;h3 id="1-reconcile-offline-work">1. Reconcile Offline Work&lt;/h3>
&lt;p>对于没有 Checkout 的文件，默认是锁住的，是一个只读状态。如果我们没有连接 P4 但是又更改为可写状态在其他地方进行了更改，此时就不会加入到 Pending 里面。
（我之前就犯了这个错误，vs连接p4失败了，于是漏了文件没传上去，导致项目构建失败）&lt;/p>
&lt;p>我们可以右键点击 Reconcile Offline Work 来检查一下有没有漏的文件：&lt;/p>
&lt;p>&lt;img src="https://hebohang.github.io/p/perforce/image-1.png"
width="479"
height="326"
loading="lazy"
class="gallery-image"
data-flex-grow="146"
data-flex-basis="352px"
>&lt;/p>
&lt;p>这个指令也就是让 Change list 和本地的情况一致。&lt;/p>
&lt;h3 id="2-revert-unchanged-files">2. Revert Unchanged Files&lt;/h3>
&lt;p>第二个好用的指令是这个：&lt;/p>
&lt;p>&lt;img src="https://hebohang.github.io/p/perforce/image-2.png"
width="506"
height="159"
loading="lazy"
class="gallery-image"
data-flex-grow="318"
data-flex-basis="763px"
>&lt;/p>
&lt;p>可以自动 Revert 掉没有更改但是被checkout的文件。&lt;/p>
&lt;h2 id="ide">IDE&lt;/h2>
&lt;h3 id="vs2022">VS2022&lt;/h3>
&lt;p>对于 VS2022，我们需要安装 P4VS 插件：
&lt;img src="https://hebohang.github.io/p/perforce/image-3.png"
width="437"
height="76"
loading="lazy"
alt="P4VS"
class="gallery-image"
data-flex-grow="575"
data-flex-basis="1380px"
>&lt;/p>
&lt;p>此时就可以在Tools-&amp;gt;Options里进行设置：
&lt;img src="https://hebohang.github.io/p/perforce/image-4.png"
width="244"
height="272"
loading="lazy"
class="gallery-image"
data-flex-grow="89"
data-flex-basis="215px"
>&lt;/p>
&lt;p>这里我认为很好用的一个设置是：&lt;/p>
&lt;p>&lt;img src="https://hebohang.github.io/p/perforce/image.png"
width="738"
height="486"
loading="lazy"
class="gallery-image"
data-flex-grow="151"
data-flex-basis="364px"
>&lt;/p>
&lt;p>那样对于可写的文件，在保存的时候就会自动 Checkout 上，这样就不用担心漏checkout的问题了。&lt;/p>
&lt;h3 id="rider">Rider&lt;/h3>
&lt;p>由于觉得 VS2022 对于写 UE 有不方便之处，我还是切到了 Rider，对于 Rider 官方就支持 Perforce，无需安装任何插件。&lt;/p>
&lt;p>我们只需要填好这两处即可：&lt;/p>
&lt;p>&lt;img src="https://hebohang.github.io/p/perforce/image-5.png"
width="981"
height="722"
loading="lazy"
class="gallery-image"
data-flex-grow="135"
data-flex-basis="326px"
>&lt;/p>
&lt;p>如果还没生效重启一下就可以了。&lt;/p>
&lt;h2 id="命令行">命令行&lt;/h2>
&lt;h3 id="背景">背景&lt;/h3>
&lt;p>美术反馈有一个文件，mark for add会报错 Cannot check out &amp;ldquo;exclusive open&amp;rdquo; file(s)，重命名为其他名字就可以add上。&lt;/p>
&lt;p>怀疑是其他人也对同样名字的文件mark for add，但是没有提交，导致被锁住了，p4v里头又看不到是谁，所以就借助命令行查看了。&lt;/p>
&lt;h3 id="初始化p4">初始化p4&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置服务端地址&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">p4 &lt;span class="nb">set&lt;/span> &lt;span class="nv">P4PORT&lt;/span>&lt;span class="o">=&lt;/span>perforce.example.com:1666
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置 Perforce 用户名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">p4 &lt;span class="nb">set&lt;/span> &lt;span class="nv">P4USER&lt;/span>&lt;span class="o">=&lt;/span>&amp;lt;your-username&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 登录到 Perforce 帐户&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">p4 login
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输入密码后，设置工作目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">p4 &lt;span class="nb">set&lt;/span> &lt;span class="nv">P4CLIENT&lt;/span>&lt;span class="o">=&lt;/span>&amp;lt;your-client-workspace&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接着对那个文件使用 opened -a ：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">p4 opened -a &lt;span class="o">[&lt;/span>filepath&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="获取文件状态">获取文件状态&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">p4 fstat xxx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里的 xxx 可以是本地路径（e:\xxx\xxx之类），也可以是服务器路径（//xxx/xxx之类），如果是对一个文件夹做检查，可以在最后加上 &amp;hellip; 如 xxx/&amp;hellip;&lt;/p>
&lt;h3 id="搜索descroption">搜索Descroption&lt;/h3>
&lt;p>例如想搜索单号，Powershell 下可以用：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">p4 changes -L &lt;span class="p">|&lt;/span> &lt;span class="k">select&lt;/span>-string &lt;span class="s2">&amp;#34;search string&amp;#34;&lt;/span> -Context &lt;span class="o">(&lt;/span>3,0&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>搜出来changelist，p4v 可以查看：
&lt;img src="https://hebohang.github.io/p/perforce/image-6.png"
width="382"
height="97"
loading="lazy"
class="gallery-image"
data-flex-grow="393"
data-flex-basis="945px"
>&lt;/p>
&lt;p>参考：
&lt;a class="link" href="https://stackoverflow.com/questions/134103/how-do-you-search-the-text-of-changelist-descriptions-in-perforce" target="_blank" rel="noopener"
>https://stackoverflow.com/questions/134103/how-do-you-search-the-text-of-changelist-descriptions-in-perforce&lt;/a>&lt;/p></description></item><item><title>Git</title><link>https://hebohang.github.io/p/git/</link><pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate><guid>https://hebohang.github.io/p/git/</guid><description>&lt;h2 id="想切换成-ssh-协议来-push">想切换成 ssh 协议来 push&lt;/h2>
&lt;p>&lt;a class="link" href="https://stackoverflow.com/questions/14762034/push-to-github-without-a-password-using-ssh-key" target="_blank" rel="noopener"
>https://stackoverflow.com/questions/14762034/push-to-github-without-a-password-using-ssh-key&lt;/a>&lt;/p>
&lt;p>示例：
&lt;code>git add xxx&lt;/code>
&lt;code>git commit -m &amp;quot;xxx&amp;quot;&lt;/code>
&lt;code>git remote set-url origin git@github.com:hebohang/glfw.git&lt;/code>
&lt;code>git push&lt;/code>&lt;/p>
&lt;h2 id="错误记录">错误记录&lt;/h2>
&lt;h3 id="git-submodule-already-exists-in-the-index">git submodule: &amp;ldquo;already exists in the index&amp;rdquo;&lt;/h3>
&lt;p>&lt;a class="link" href="https://stackoverflow.com/questions/12898278/issue-with-adding-common-code-as-git-submodule-already-exists-in-the-index" target="_blank" rel="noopener"
>https://stackoverflow.com/questions/12898278/issue-with-adding-common-code-as-git-submodule-already-exists-in-the-index&lt;/a>&lt;/p>
&lt;h3 id="openssl-ssl_read">OpenSSL SSL_read:&lt;/h3>
&lt;p>git clone 的时候发生的错误。&lt;/p>
&lt;p>这是服务器的SSL证书没有经过第三方机构的签署，所以报错。&lt;/p>
&lt;p>解决方法：&lt;code>git config --global http.sslVerify &amp;quot;false&amp;quot;&lt;/code>&lt;/p>
&lt;p>&lt;a class="link" href="https://www.cnblogs.com/jfen625/p/12995408.html" target="_blank" rel="noopener"
>https://www.cnblogs.com/jfen625/p/12995408.html&lt;/a>&lt;/p>
&lt;h2 id="文件夹大小写问题">文件夹大小写问题&lt;/h2>
&lt;p>貌似 Windows 默认不分大小写，但是我们可以在项目的：.git-&amp;gt;config 中将 ignorecase 手动改为 false&lt;/p>
&lt;h2 id="更新版本">更新版本&lt;/h2>
&lt;p>Windows：git bash
&lt;code>git update-git-for-windows&lt;/code>&lt;/p>
&lt;h2 id="一些参数">一些参数&lt;/h2>
&lt;h3 id="比较差异">比较差异&lt;/h3>
&lt;p>git difftool &amp;ndash;dir-diff&lt;/p>
&lt;h3 id="--depth1">&amp;ndash;depth=1&lt;/h3>
&lt;p>建议不想给项目做贡献或者看历史啥的就用这个就好了。&lt;/p>
&lt;h3 id="--recursive">&amp;ndash;recursive&lt;/h3>
&lt;p>在有子目录的时候需要用：
&lt;code>git clone --recursive&lt;/code>&lt;/p>
&lt;h3 id="-b">-b&lt;/h3>
&lt;p>clone 的时候可以指定分支，例如：&lt;/p>
&lt;p>&lt;code>git clone -b 4.27.2-release --depth=1 git@github.com:EpicGames/UnrealEngine.git&lt;/code>&lt;/p>
&lt;h2 id="功能记录">功能记录&lt;/h2>
&lt;h3 id="cherry-pick">cherry pick&lt;/h3>
&lt;p>如果只想要某个commit，不需要直接把branch全部合入过来，可以用 cherry pick：
&lt;a class="link" href="https://www.ruanyifeng.com/blog/2020/04/git-cherry-pick.html" target="_blank" rel="noopener"
>https://www.ruanyifeng.com/blog/2020/04/git-cherry-pick.html&lt;/a>&lt;/p>
&lt;h3 id="reset">reset&lt;/h3>
&lt;p>想把commit的东西给回退到本地，更改后或者pull后重新commit上去，可以用 git reset
&lt;img src="https://img2023.cnblogs.com/blog/1752640/202302/1752640-20230222155245075-632547885.png"
loading="lazy"
alt="image"
>
&lt;a class="link" href="https://juejin.cn/post/6844904185129861128" target="_blank" rel="noopener"
>https://juejin.cn/post/6844904185129861128&lt;/a>&lt;/p>
&lt;h2 id="submodule">submodule&lt;/h2>
&lt;h3 id="更新">更新&lt;/h3>
&lt;p>&lt;code>git submodule update --init --recursive&lt;/code>&lt;/p>
&lt;h2 id="ubuntu-git">Ubuntu Git&lt;/h2>
&lt;p>&lt;a class="link" href="https://blog.csdn.net/Chenftli/article/details/81141010" target="_blank" rel="noopener"
>https://blog.csdn.net/Chenftli/article/details/81141010&lt;/a>&lt;/p>
&lt;h3 id="关于-gitgithubcom-permission-denied-publickey">关于 &lt;a class="link" href="mailto:git@github.com" >git@github.com&lt;/a>: Permission denied (publickey).&lt;/h3>
&lt;p>&lt;a class="link" href="https://docs.github.com/cn/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent" target="_blank" rel="noopener"
>https://docs.github.com/cn/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://docs.github.com/cn/authentication/troubleshooting-ssh/error-permission-denied-publickey" target="_blank" rel="noopener"
>https://docs.github.com/cn/authentication/troubleshooting-ssh/error-permission-denied-publickey&lt;/a>&lt;/p>
&lt;h2 id="github">GitHub&lt;/h2>
&lt;h3 id="查看-history">查看 history&lt;/h3>
&lt;p>&lt;img src="https://hebohang.github.io/p/git/image.png"
width="1186"
height="438"
loading="lazy"
class="gallery-image"
data-flex-grow="270"
data-flex-basis="649px"
>&lt;/p>
&lt;p>&lt;a class="link" href="https://blog.csdn.net/weixin_30615767/article/details/100091029" target="_blank" rel="noopener"
>https://blog.csdn.net/weixin_30615767/article/details/100091029&lt;/a>&lt;/p>
&lt;h3 id="设置默认分支">设置默认分支&lt;/h3>
&lt;p>&lt;img src="https://hebohang.github.io/p/git/image-1.png"
width="1842"
height="723"
loading="lazy"
class="gallery-image"
data-flex-grow="254"
data-flex-basis="611px"
>&lt;/p>
&lt;h3 id="fork的项目升级">fork的项目升级&lt;/h3>
&lt;p>&lt;a class="link" href="https://zhuanlan.zhihu.com/p/291845721" target="_blank" rel="noopener"
>https://zhuanlan.zhihu.com/p/291845721&lt;/a>&lt;/p>
&lt;p>指明我们需要同步的仓库：&lt;/p>
&lt;p>&lt;code>git remote add upstream https://github.com/OriginalRepo/OriginalProject.git&lt;/code>&lt;/p>
&lt;p>拉取更新的 branches 和 commits：
&lt;code>git fetch upstream&lt;/code>&lt;/p>
&lt;p>合并：
&lt;code>git merge upstream/master&lt;/code>&lt;/p></description></item></channel></rss>