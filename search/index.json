[{"content":"常用命令 1 2 3 4 5 6 7 8 # 本地预览 hugo server # 预览特定config hugo --config=config-HEngine.yaml server # 新建文章（指定文章路径） hugo new post/xxx/xxx/index.md # 提交 git add .;git commit -m \u0026#34;update\u0026#34;;git push Hugo链接 官方文档： https://gohugo.io/documentation/\n官方git： https://github.com/gohugoio/hugo\nHugo+Stack 环境配置 我们选用的是stack主题： https://github.com/CaiJimmy/hugo-theme-stack\n快速入门版本 最开始，我们使用的是stack官方给的快速上手版本：https://github.com/CaiJimmy/hugo-theme-stack-starter ，这个版本直接使用 Hugo module 给串联起来，并且可以直接使用 GitHub 的 codespace 直接上手写博客。\n但是用这种版本会有一些问题：\ncodespace启动较慢，不如本地写 因为没有用源码，所以要么是自己fork一份stack theme再改自己仓库对应的主题地址，要么就不能对主题进行定制化修改 基于此，最后我还是选择了源码+本地环境配置的写法。当然 codespace 仍然是可以用的。\n本地环境配置 安装hugo\n根据官方建议，我们选择下载扩展版本： 根据我的本机环境，我下载的是hugo_extended_0.120.4_windows-amd64.zip版本。\n安装完成后可以用 hugo version 查看版本，检查是否安装成功。\n安装go语言\nhugo选择是go作为构建语言，这种编译型的语言有着天然的速度优势，因此几乎可以做到实时预览，这也是我选择hugo的主要原因。\n初始化博客环境\nhugo new site blog\n这样就会新建立blog文件夹，并且包含hugo的基本环境。\n下载主题源码\n我这里选用的stack主题，直接在stack的仓库拉一份release版本的，放在我们刚刚的博客环境中的themes文件夹中（若没有则新建）。\n一般主题都会有一个 exampleSite 文件夹，拷贝到博客根目录就ok了。\nCI流程 博客仓库托管于 Github，我们自然是使用 Github Action 进行自动部署的 CI（continuous integration）流程。事实上，前面的stack快速版本就已经给了这样的文件了。\n但是不幸的是他还有点问题，他的部署流程使用的是 JamesIves/github-pages-deploy-action@v4，但是我没有成功。我最后改成了使用 peaceiris/actions-gh-pages@v3：\n1 2 3 4 5 6 7 8 - name: Deploy 🚀 uses: peaceiris/actions-gh-pages@v3 with: PERSONAL_TOKEN: 这里填写你的 GitHub 的 token EXTERNAL_REPOSITORY: 这里填你部署的地址，我的是 hebohang/hebohang.github.io PUBLISH_BRANCH: hugo PUBLISH_DIR: ./public commit_message: ${{ github.event.head_commit.message }} 关于TOKEN 这里需要注意，我们应该给token对应的权限以让他可以使用 GitHub Workflow（而之前hexo的部署是使用hexo指令的，就没有加权限的步骤）。\n使用多个主题 本地可以这样测试：hugo --config=config-HEngine.yaml server\n使用多个config以指定不同的theme。\nhttps://discourse.gohugo.io/t/two-themes-as-separate-hugo-directories-deployed-to-the-same-website/27899/4\nhttps://github.com/peaceiris/actions-gh-pages/issues/324\n关于stack主题 文档：https://stack.jimmycai.com/config/menu\n说明 博客中链接需要单独起一行才生效。 如果创建多级文件夹时文章文件名不是 index.md 或者类别、标签文件名不是 _index.md 的话，设置封面图片会出现问题。 参考 https://blog.reincarnatey.net/2023/build-hugo-blog-with-stack-mod/#%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2\n","date":"2023-11-15T16:20:34+08:00","permalink":"https://hebohang.github.io/p/hugo/","title":"Hugo"},{"content":"建站选型 博客分静态博客和动态博客，静态博客维护成本小，因此我这里选择的是静态博客的方式。主流的几个静态博客框架是jekyll、hexo和hugo，我们这里使用的是 Hexo 进行静态博客的生成，随后部署在Github Pages上。\n主要参考的链接是：https://blog.csdn.net/yaorongke/article/details/119089190\n关于Hexo 文档：documentation\n疑问：troubleshooting\nGithub：GitHub\n常用指令 Windows Powershell 多个指令不能用 \u0026amp;\u0026amp; 了，我们可以使用分号 ;\n我的常用指令：\n1 2 3 4 5 hexo clean hexo g hexo s hexo d hexo g -d 因此本地测试我们可以直接：\n1 hexo clean; hexo g; hexo s 一步到位。\n部署的时候可以：\n1 hexo clean; hexo g; hexo d 或者\n1 hexo g -d Quick Start 新建博客 1 $ hexo new \u0026#34;My New Post\u0026#34; More info: Writing\n本地起一个服务器 1 $ hexo server More info: Server\n主要是用于本地自测，可以简单用写： hexo s\nGenerate static files 1 $ hexo generate More info: Generating\n本地生成，hexo g 一键部署.\nDeploy to remote sites 1 $ hexo deploy More info: Deployment\n我们配好部署网站后端后，就可以直接用 hexo g -d\n关于Next 我们选择的主题theme是Next主题，参考使用文档： https://theme-next.iissnan.com/getting-started.html\nGithub位置：https://github.com/theme-next/hexo-theme-next\n","date":"2023-11-11T16:17:13+08:00","permalink":"https://hebohang.github.io/p/hexo/","title":"Hexo"}]